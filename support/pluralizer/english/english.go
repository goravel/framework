package english

import (
	"github.com/goravel/framework/contracts/support/pluralizer"
	"github.com/goravel/framework/support/pluralizer/rules"
)

var _ pluralizer.Language = (*Language)(nil)

type Language struct {
	singularRuleset pluralizer.Ruleset
	pluralRuleset   pluralizer.Ruleset
}

func New() *Language {
	return &Language{
		singularRuleset: newEnglishSingularRuleset(),
		pluralRuleset:   newEnglishPluralRuleset(),
	}
}

func (r *Language) Name() string {
	return "english"
}

func (r *Language) SingularRuleset() pluralizer.Ruleset {
	return r.singularRuleset
}

func (r *Language) PluralRuleset() pluralizer.Ruleset {
	return r.pluralRuleset
}

func newEnglishPluralRuleset() pluralizer.Ruleset {
	uninflected := getUninflectedDefault()
	uninflected = append(uninflected,
		rules.NewPattern(`(?i)people$`),
		rules.NewPattern(`(?i)trivia$`),
		rules.NewPattern(`(?i)\w+ware$`),
		rules.NewPattern(`(?i)media$`),
	)

	irregular := pluralizer.Substitutions{
		rules.NewSubstitution("abuse", "abuses"),
		rules.NewSubstitution("atlas", "atlases"),
		rules.NewSubstitution("avalanche", "avalanches"),
		rules.NewSubstitution("axis", "axes"),
		rules.NewSubstitution("axe", "axes"),
		rules.NewSubstitution("beef", "beefs"),
		rules.NewSubstitution("blouse", "blouses"),
		rules.NewSubstitution("brother", "brothers"),
		rules.NewSubstitution("brownie", "brownies"),
		rules.NewSubstitution("cache", "caches"),
		rules.NewSubstitution("cafe", "cafes"),
		rules.NewSubstitution("canvas", "canvases"),
		rules.NewSubstitution("cave", "caves"),
		rules.NewSubstitution("chateau", "chateaux"),
		rules.NewSubstitution("child", "children"),
		rules.NewSubstitution("cookie", "cookies"),
		rules.NewSubstitution("corpus", "corpuses"),
		rules.NewSubstitution("cow", "cows"),
		rules.NewSubstitution("criterion", "criteria"),
		rules.NewSubstitution("curriculum", "curricula"),
		rules.NewSubstitution("curve", "curves"),
		rules.NewSubstitution("demo", "demos"),
		rules.NewSubstitution("domino", "dominoes"),
		rules.NewSubstitution("echo", "echoes"),
		rules.NewSubstitution("emphasis", "emphases"),
		rules.NewSubstitution("epoch", "epochs"),
		rules.NewSubstitution("foe", "foes"),
		rules.NewSubstitution("foot", "feet"),
		rules.NewSubstitution("fungus", "fungi"),
		rules.NewSubstitution("ganglion", "ganglions"),
		rules.NewSubstitution("gas", "gases"),
		rules.NewSubstitution("genie", "genies"),
		rules.NewSubstitution("genus", "genera"),
		rules.NewSubstitution("goose", "geese"),
		rules.NewSubstitution("graffito", "graffiti"),
		rules.NewSubstitution("grave", "graves"),
		rules.NewSubstitution("hippopotamus", "hippopotami"),
		rules.NewSubstitution("hoax", "hoaxes"),
		rules.NewSubstitution("hoof", "hoofs"),
		rules.NewSubstitution("human", "humans"),
		rules.NewSubstitution("iris", "irises"),
		rules.NewSubstitution("larva", "larvae"),
		rules.NewSubstitution("leaf", "leaves"),
		rules.NewSubstitution("lens", "lenses"),
		rules.NewSubstitution("loaf", "loaves"),
		//NewSubstitution("louse", "lice"),
		rules.NewSubstitution("man", "men"),
		rules.NewSubstitution("medium", "media"),
		rules.NewSubstitution("memorandum", "memoranda"),
		rules.NewSubstitution("money", "monies"),
		rules.NewSubstitution("mongoose", "mongooses"),
		rules.NewSubstitution("motto", "mottoes"),
		//NewSubstitution("mouse", "mice"),
		rules.NewSubstitution("move", "moves"),
		rules.NewSubstitution("mythos", "mythoi"),
		rules.NewSubstitution("neurosis", "neuroses"),
		rules.NewSubstitution("niche", "niches"),
		rules.NewSubstitution("niveau", "niveaux"),
		rules.NewSubstitution("nucleus", "nuclei"),
		rules.NewSubstitution("numen", "numina"),
		rules.NewSubstitution("oasis", "oases"),
		rules.NewSubstitution("occiput", "occiputs"),
		rules.NewSubstitution("octopus", "octopuses"),
		rules.NewSubstitution("opus", "opuses"),
		rules.NewSubstitution("ox", "oxen"),
		rules.NewSubstitution("passerby", "passersby"),
		rules.NewSubstitution("penis", "penises"),
		rules.NewSubstitution("person", "people"),
		rules.NewSubstitution("plateau", "plateaux"),
		rules.NewSubstitution("runner-up", "runners-up"),
		rules.NewSubstitution("safe", "safes"),
		rules.NewSubstitution("save", "saves"),
		rules.NewSubstitution("sex", "sexes"),
		rules.NewSubstitution("sieve", "sieves"),
		rules.NewSubstitution("soliloquy", "soliloquies"),
		rules.NewSubstitution("son-in-law", "sons-in-law"),
		rules.NewSubstitution("stadium", "stadiums"),
		rules.NewSubstitution("syllabus", "syllabi"),
		rules.NewSubstitution("testis", "testes"),
		rules.NewSubstitution("thief", "thieves"),
		rules.NewSubstitution("tooth", "teeth"),
		rules.NewSubstitution("tornado", "tornadoes"),
		rules.NewSubstitution("trilby", "trilbys"),
		rules.NewSubstitution("turf", "turfs"),
		rules.NewSubstitution("valve", "valves"),
		rules.NewSubstitution("volcano", "volcanoes"),
		rules.NewSubstitution("wave", "waves"),
		rules.NewSubstitution("zombie", "zombies"),
	}

	regular := pluralizer.Transformations{
		rules.NewTransformation(`(?i)(s)tatus$`, `${1}tatuses`),
		rules.NewTransformation(`(?i)(quiz)$`, `${1}zes`),
		rules.NewTransformation(`(?i)^(ox)$`, `${1}en`),
		rules.NewTransformation(`(?i)([ml])ouse$`, `${1}ice`),
		rules.NewTransformation(`(?i)(matr|vert|ind)(ix|ex)$`, `${1}ices`),
		rules.NewTransformation(`(?i)(x|ch|ss|sh)$`, `${1}es`),
		rules.NewTransformation(`(?i)([^aeiouy]|qu)y$`, `${1}ies`),
		rules.NewTransformation(`(?i)(hive|gulf)$`, `${1}s`),
		rules.NewTransformation(`(?i)(?:([^f])fe|([lr])f)$`, `${1}${2}ves`),
		rules.NewTransformation(`(?i)sis$`, `ses`),
		rules.NewTransformation(`(?i)([ti])um$`, `${1}a`),
		rules.NewTransformation(`(?i)(tax)on$`, `${1}a`),
		rules.NewTransformation(`(?i)(c)riterion$`, `${1}riteria`),
		rules.NewTransformation(`(?i)(p)erson$`, `${1}eople`),
		rules.NewTransformation(`(?i)(m)an$`, `${1}en`),
		rules.NewTransformation(`(?i)(c)hild$`, `${1}hildren`),
		rules.NewTransformation(`(?i)(f)oot$`, `${1}eet`),
		rules.NewTransformation(`(?i)(buffal|her|potat|tomat|volcan)o$`, `${1}oes`),
		rules.NewTransformation(`(?i)(alumn|bacill|cact|foc|fung|nucle|radi|stimul|syllab|termin|vir)us$`, `${1}i`),
		rules.NewTransformation(`(?i)us$`, `uses`),
		rules.NewTransformation(`(?i)(alias)$`, `${1}es`),
		rules.NewTransformation(`(?i)(analys|ax|cris|test|thes)is$`, `${1}es`),
		rules.NewTransformation(`(?i)s$`, `s`),
		rules.NewTransformation(`(?i)^$`, ``),
		rules.NewTransformation(`(?i)$`, `s`),
	}

	return rules.NewRuleset(regular, uninflected, irregular)
}

func newEnglishSingularRuleset() pluralizer.Ruleset {
	uninflected := getUninflectedDefault()
	uninflected = append(uninflected,
		rules.NewPattern(`(?i).*ss$`),
		rules.NewPattern(`(?i)clothes$`),
		rules.NewPattern(`(?i)data$`),
		rules.NewPattern(`(?i)fascia$`),
		rules.NewPattern(`(?i)fuchsia$`),
		rules.NewPattern(`(?i)galleria$`),
		rules.NewPattern(`(?i)mafia$`),
		rules.NewPattern(`(?i)militia$`),
		rules.NewPattern(`(?i)pants$`),
		rules.NewPattern(`(?i)petunia$`),
		rules.NewPattern(`(?i)sepia$`),
		rules.NewPattern(`(?i)trivia$`),
		rules.NewPattern(`(?i)utopia$`),
	)

	irregular := pluralizer.Substitutions{}
	for _, sub := range newEnglishPluralRuleset().Irregular() {
		irregular = append(irregular, rules.NewSubstitution(sub.To(), sub.From()))
	}

	regular := pluralizer.Transformations{
		rules.NewTransformation(`(?i)(s)tatuses$`, `${1}tatus`),
		rules.NewTransformation(`(?i)(s)tatus$`, `${1}tatus`),
		rules.NewTransformation(`(?i)(c)ampus$`, `${1}ampus`),
		rules.NewTransformation(`(?i)^(.*)(menu)s$`, `${1}${2}`),
		rules.NewTransformation(`(?i)(quiz)zes$`, `${1}`),
		rules.NewTransformation(`(?i)(matr)ices$`, `${1}ix`),
		rules.NewTransformation(`(?i)(vert|ind)ices$`, `${1}ex`),
		rules.NewTransformation(`(?i)^(ox)en`, `${1}`),
		rules.NewTransformation(`(?i)(alias)(es)*$`, `${1}`),
		rules.NewTransformation(`(?i)(buffal|her|potat|tomat|volcan)oes$`, `${1}o`),
		rules.NewTransformation(`(?i)(alumn|bacill|cact|foc|fung|nucle|radi|stimul|syllab|termin|viri?)i$`, `${1}us`),
		rules.NewTransformation(`(?i)([ftw]ax)es$`, `${1}`),
		rules.NewTransformation(`(?i)(analys|ax|cris|test|thes)es$`, `${1}is`),
		rules.NewTransformation(`(?i)(shoe|slave)s$`, `${1}`),
		rules.NewTransformation(`(?i)(o)es$`, `${1}`),
		rules.NewTransformation(`(?i)ouses$`, `ouse`),
		rules.NewTransformation(`(?i)([^a])uses$`, `${1}us`),
		rules.NewTransformation(`(?i)([ml])ice$`, `${1}ouse`),
		rules.NewTransformation(`(?i)(x|ch|ss|sh)es$`, `${1}`),
		rules.NewTransformation(`(?i)(m)ovies$`, `${1}ovie`),
		rules.NewTransformation(`(?i)(s)eries$`, `${1}eries`),
		rules.NewTransformation(`(?i)([^aeiouy]|qu)ies$`, `${1}y`),
		rules.NewTransformation(`(?i)([lr])ves$`, `${1}f`),
		rules.NewTransformation(`(?i)(tive)s$`, `${1}`),
		rules.NewTransformation(`(?i)(hive)s$`, `${1}`),
		rules.NewTransformation(`(?i)(drive)s$`, `${1}`),
		rules.NewTransformation(`(?i)(dive)s$`, `${1}`),
		rules.NewTransformation(`(?i)(olive)s$`, `${1}`),
		rules.NewTransformation(`(?i)([^fo])ves$`, `${1}fe`),
		rules.NewTransformation(`(?i)(^analy)ses$`, `${1}sis`),
		rules.NewTransformation(`(?i)(analy|diagno|^ba|(p)arenthe|(p)rogno|(s)ynop|(t)he)ses$`, `${1}${2}sis`),
		rules.NewTransformation(`(?i)(tax)a$`, `${1}on`),
		rules.NewTransformation(`(?i)(c)riteria$`, `${1}riterion`),
		rules.NewTransformation(`(?i)([ti])a$`, `${1}um`),
		rules.NewTransformation(`(?i)(p)eople$`, `${1}erson`),
		rules.NewTransformation(`(?i)(m)en$`, `${1}an`),
		rules.NewTransformation(`(?i)(c)hildren$`, `${1}hild`),
		rules.NewTransformation(`(?i)(f)eet$`, `${1}oot`),
		rules.NewTransformation(`(?i)(n)ews$`, `${1}ews`),
		rules.NewTransformation(`(?i)eaus$`, `eau`),
		rules.NewTransformation(`(?i)^tights$`, `tights`),
		rules.NewTransformation(`(?i)^shorts$`, `shorts`),
		rules.NewTransformation(`(?i)s$`, ``),
	}

	return rules.NewRuleset(regular, uninflected, irregular)
}

func getUninflectedDefault() []pluralizer.Pattern {
	return []pluralizer.Pattern{
		rules.NewPattern(`(?i)\w+media$`),
		rules.NewPattern(`(?i)advice$`),
		rules.NewPattern(`(?i)aircraft$`),
		rules.NewPattern(`(?i)amoyese$`),
		rules.NewPattern(`(?i)art$`),
		rules.NewPattern(`(?i)audio$`),
		rules.NewPattern(`(?i)baggage$`),
		rules.NewPattern(`(?i)bison$`),
		rules.NewPattern(`(?i)borghese$`),
		rules.NewPattern(`(?i)bream$`),
		rules.NewPattern(`(?i)breeches$`),
		rules.NewPattern(`(?i)britches$`),
		rules.NewPattern(`(?i)buffalo$`),
		rules.NewPattern(`(?i)butter$`),
		rules.NewPattern(`(?i)cantus$`),
		rules.NewPattern(`(?i)carp$`),
		rules.NewPattern(`(?i)cattle$`),
		rules.NewPattern(`(?i)chassis$`),
		rules.NewPattern(`(?i)clippers$`),
		rules.NewPattern(`(?i)clothing$`),
		rules.NewPattern(`(?i)coal$`),
		rules.NewPattern(`(?i)cod$`),
		rules.NewPattern(`(?i)coitus$`),
		rules.NewPattern(`(?i)compensation$`),
		rules.NewPattern(`(?i)congoese$`),
		rules.NewPattern(`(?i)contretemps$`),
		rules.NewPattern(`(?i)coreopsis$`),
		rules.NewPattern(`(?i)corps$`),
		rules.NewPattern(`(?i)cotton$`),
		rules.NewPattern(`(?i)data$`),
		rules.NewPattern(`(?i)debris$`),
		rules.NewPattern(`(?i)deer$`),
		rules.NewPattern(`(?i)diabetes$`),
		rules.NewPattern(`(?i)djinn$`),
		rules.NewPattern(`(?i)education$`),
		rules.NewPattern(`(?i)eland$`),
		rules.NewPattern(`(?i)elk$`),
		rules.NewPattern(`(?i)emoji$`),
		rules.NewPattern(`(?i)equipment$`),
		rules.NewPattern(`(?i)evidence$`),
		rules.NewPattern(`(?i)faroese$`),
		rules.NewPattern(`(?i)feedback$`),
		rules.NewPattern(`(?i)fish$`),
		rules.NewPattern(`(?i)flounder$`),
		rules.NewPattern(`(?i)flour$`),
		rules.NewPattern(`(?i)foochowese$`),
		rules.NewPattern(`(?i)food$`),
		rules.NewPattern(`(?i)furniture$`),
		rules.NewPattern(`(?i)gallows$`),
		rules.NewPattern(`(?i)genevese$`),
		rules.NewPattern(`(?i)genoese$`),
		rules.NewPattern(`(?i)gilbertese$`),
		rules.NewPattern(`(?i)gold$`),
		rules.NewPattern(`(?i)headquarters$`),
		rules.NewPattern(`(?i)herpes$`),
		rules.NewPattern(`(?i)hijinks$`),
		rules.NewPattern(`(?i)homework$`),
		rules.NewPattern(`(?i)hottentotese$`),
		rules.NewPattern(`(?i)impatience$`),
		rules.NewPattern(`(?i)information$`),
		rules.NewPattern(`(?i)innings$`),
		rules.NewPattern(`(?i)jackanapes$`),
		rules.NewPattern(`(?i)jeans$`),
		rules.NewPattern(`(?i)jedi$`),
		rules.NewPattern(`(?i)kin$`),
		rules.NewPattern(`(?i)kiplingese$`),
		rules.NewPattern(`(?i)knowledge$`),
		rules.NewPattern(`(?i)kongoese$`),
		rules.NewPattern(`(?i)leather$`),
		rules.NewPattern(`(?i)love$`),
		rules.NewPattern(`(?i)lucchese$`),
		rules.NewPattern(`(?i)luggage$`),
		rules.NewPattern(`(?i)mackerel$`),
		rules.NewPattern(`(?i)Maltese$`),
		rules.NewPattern(`(?i)management$`),
		rules.NewPattern(`(?i)metadata$`),
		rules.NewPattern(`(?i)mews$`),
		rules.NewPattern(`(?i)money$`),
		rules.NewPattern(`(?i)moose$`),
		rules.NewPattern(`(?i)mumps$`),
		rules.NewPattern(`(?i)music$`),
		rules.NewPattern(`(?i)nankingese$`),
		rules.NewPattern(`(?i)news$`),
		rules.NewPattern(`(?i)nexus$`),
		rules.NewPattern(`(?i)niasese$`),
		rules.NewPattern(`(?i)nutrition$`),
		rules.NewPattern(`(?i)offspring$`),
		rules.NewPattern(`(?i)oil$`),
		rules.NewPattern(`(?i)patience$`),
		rules.NewPattern(`(?i)pekingese$`),
		rules.NewPattern(`(?i)piedmontese$`),
		rules.NewPattern(`(?i)pincers$`),
		rules.NewPattern(`(?i)pistoiese$`),
		rules.NewPattern(`(?i)plankton$`),
		rules.NewPattern(`(?i)pliers$`),
		rules.NewPattern(`(?i)pokemon$`),
		rules.NewPattern(`(?i)police$`),
		rules.NewPattern(`(?i)polish$`),
		rules.NewPattern(`(?i)portuguese$`),
		rules.NewPattern(`(?i)proceedings$`),
		rules.NewPattern(`(?i)progress$`),
		rules.NewPattern(`(?i)rabies$`),
		rules.NewPattern(`(?i)rain$`),
		rules.NewPattern(`(?i)research$`),
		rules.NewPattern(`(?i)rhinoceros$`),
		rules.NewPattern(`(?i)rice$`),
		rules.NewPattern(`(?i)salmon$`),
		rules.NewPattern(`(?i)sand$`),
		rules.NewPattern(`(?i)sarawakese$`),
		rules.NewPattern(`(?i)scissors$`),
		rules.NewPattern(`(?i)sea[- ]bass$`),
		rules.NewPattern(`(?i)series$`),
		rules.NewPattern(`(?i)shavese$`),
		rules.NewPattern(`(?i)shears$`),
		rules.NewPattern(`(?i)sheep$`),
		rules.NewPattern(`(?i)siemens$`),
		rules.NewPattern(`(?i)silk$`),
		rules.NewPattern(`(?i)sms$`),
		rules.NewPattern(`(?i)soap$`),
		rules.NewPattern(`(?i)social media$`),
		rules.NewPattern(`(?i)spam$`),
		rules.NewPattern(`(?i)species$`),
		rules.NewPattern(`(?i)staff$`),
		rules.NewPattern(`(?i)sugar$`),
		rules.NewPattern(`(?i)swine$`),
		rules.NewPattern(`(?i)talent$`),
		rules.NewPattern(`(?i)toothpaste$`),
		rules.NewPattern(`(?i)traffic$`),
		rules.NewPattern(`(?i)travel$`),
		rules.NewPattern(`(?i)trousers$`),
		rules.NewPattern(`(?i)trout$`),
		rules.NewPattern(`(?i)tuna$`),
		rules.NewPattern(`(?i)us$`),
		rules.NewPattern(`(?i)vermontese$`),
		rules.NewPattern(`(?i)vinegar$`),
		rules.NewPattern(`(?i)weather$`),
		rules.NewPattern(`(?i)wenchowese$`),
		rules.NewPattern(`(?i)wheat$`),
		rules.NewPattern(`(?i)whiting$`),
		rules.NewPattern(`(?i)wildebeest$`),
		rules.NewPattern(`(?i)wood$`),
		rules.NewPattern(`(?i)wool$`),
		rules.NewPattern(`(?i)yengeese$`),
	}
}
